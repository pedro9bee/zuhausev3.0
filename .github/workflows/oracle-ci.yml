name: Build and Deploy to Oracle Cloud

on:
  push:
    branches: [ production ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Oracle Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ORACLE_REGISTRY_URL }}
        username: ${{ secrets.ORACLE_USERNAME }}
        password: ${{ secrets.ORACLE_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.ORACLE_REGISTRY_URL }}/zuhaus:latest
          ${{ secrets.ORACLE_REGISTRY_URL }}/zuhaus:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/production'
    environment: production
    
    steps:
    - name: Deploy to Oracle Cloud Instance
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.ORACLE_HOST }}
        username: ${{ secrets.ORACLE_SSH_USERNAME }}
        key: ${{ secrets.ORACLE_SSH_KEY }}
        script: |
          # Stop existing containers
          docker-compose down || true
          
          # Pull latest image
          docker pull ${{ secrets.ORACLE_REGISTRY_URL }}/zuhaus:latest
          
          # Update docker-compose with new image (Airtable version - zero cost)
          cat > docker-compose.prod.yml << 'EOF'
          version: '3.8'
          services:
            app:
              image: ${{ secrets.ORACLE_REGISTRY_URL }}/zuhaus:latest
              ports:
                - "80:3000"
              environment:
                - NODE_ENV=production
                - AIRTABLE_API_KEY=${{ secrets.AIRTABLE_API_KEY }}
                - AIRTABLE_BASE_ID=${{ secrets.AIRTABLE_BASE_ID }}
                - SESSION_SECRET=${{ secrets.SESSION_SECRET }}
              restart: unless-stopped
          EOF
          
          # Start new containers
          docker-compose -f docker-compose.prod.yml up -d