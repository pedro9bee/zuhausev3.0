import "dotenv/config";
import Airtable from 'airtable';

const base = new Airtable({
  apiKey: process.env.AIRTABLE_API_KEY
}).base(process.env.AIRTABLE_BASE_ID!);

// Primeiro, vamos verificar se as tabelas existem e criar dados
async function setupAirtable() {
  console.log("üîß Configurando Airtable...");
  
  try {
    // Testar se conseguimos acessar as tabelas
    console.log("üìã Verificando tabela Properties...");
    try {
      const propertiesTest = await base('Properties').select({ maxRecords: 1 }).firstPage();
      console.log("‚úÖ Tabela Properties existe");
    } catch (error) {
      console.log("‚ùå Tabela Properties n√£o encontrada ou sem permiss√£o");
      throw error;
    }

    console.log("üí¨ Verificando tabela Testimonials...");
    try {
      const testimonialsTest = await base('Testimonials').select({ maxRecords: 1 }).firstPage();
      console.log("‚úÖ Tabela Testimonials existe");
    } catch (error) {
      console.log("‚ùå Tabela Testimonials n√£o encontrada ou sem permiss√£o");
      throw error;
    }

    // Criar dados dummy
    console.log("üè† Criando propriedades de exemplo...");
    
    const properties = [
      {
        title: "Casa Moderna no Alphaville",
        description: "Bel√≠ssima casa moderna com 4 quartos, piscina e √°rea gourmet completa. Localizada em condom√≠nio fechado de alto padr√£o.",
        price: "R$ 850.000",
        location: "Alphaville, Barueri",
        bedrooms: 4,
        bathrooms: 3,
        area: 280,
        type: "Casa",
        status: "available",
        images: ["https://example.com/casa1.jpg"],
        features: ["Piscina", "√Årea Gourmet", "Garagem", "Jardim"],
        isForSale: true,
        isForRent: false,
        isFeatured: true,
      },
      {
        title: "Apartamento Cobertura Duplex",
        description: "Cobertura duplex com vista panor√¢mica, 3 su√≠tes e terra√ßo com churrasqueira. Acabamento de primeira linha.",
        price: "R$ 1.200.000",
        location: "Vila Madalena, S√£o Paulo",
        bedrooms: 3,
        bathrooms: 4,
        area: 200,
        type: "Apartamento",
        status: "available",
        images: ["https://example.com/apto1.jpg"],
        features: ["Terra√ßo", "Churrasqueira", "Vista Panor√¢mica", "Su√≠tes"],
        isForSale: true,
        isForRent: true,
        rentPrice: "R$ 6.500",
        isFeatured: true,
      },
      {
        title: "Casa de Campo em Arouca",
        description: "Casa r√∫stica com muito charme, ideal para quem busca tranquilidade. Amplo terreno com √°rvores frut√≠feras.",
        price: "R$ 450.000",
        location: "Arouca, Interior SP",
        bedrooms: 3,
        bathrooms: 2,
        area: 150,
        type: "Casa",
        status: "available",
        images: ["https://example.com/casa2.jpg"],
        features: ["Terreno Grande", "√Årvores Frut√≠feras", "Varanda", "Lareira"],
        isForSale: true,
        isForRent: false,
        isFeatured: false,
      }
    ];

    // Criar propriedades uma por uma
    for (const property of properties) {
      try {
        const record = await base('Properties').create(property);
        console.log(`‚úÖ Propriedade criada: ${property.title} (ID: ${record.id})`);
      } catch (error) {
        console.log(`‚ùå Erro ao criar propriedade ${property.title}:`, error);
      }
    }

    // Criar testimonials
    console.log("üí¨ Criando depoimentos de exemplo...");
    
    const testimonials = [
      {
        name: "Maria Silva",
        location: "Alphaville, SP",
        rating: 5,
        message: "Excelente atendimento! Encontrei a casa dos meus sonhos rapidamente. Equipe muito profissional e atenciosa.",
        avatar: "https://example.com/avatar1.jpg"
      },
      {
        name: "Jo√£o Santos",
        location: "Vila Madalena, SP",
        rating: 5,
        message: "Processo de compra muito tranquilo. Recomendo a todos que buscam um im√≥vel de qualidade.",
        avatar: "https://example.com/avatar2.jpg"
      },
      {
        name: "Ana Costa",
        location: "Atibaia, SP",
        rating: 4,
        message: "√ìtima experi√™ncia! Venderam minha casa rapidamente e com um pre√ßo justo. Muito satisfeita.",
        avatar: "https://example.com/avatar3.jpg"
      }
    ];

    // Criar testimonials um por um
    for (const testimonial of testimonials) {
      try {
        const record = await base('Testimonials').create(testimonial);
        console.log(`‚úÖ Depoimento criado: ${testimonial.name} (ID: ${record.id})`);
      } catch (error) {
        console.log(`‚ùå Erro ao criar depoimento ${testimonial.name}:`, error);
      }
    }

    console.log("üéâ Setup do Airtable conclu√≠do!");
    console.log("üåê Agora voc√™ pode acessar http://localhost:3000");
    
  } catch (error) {
    console.error("‚ùå Erro no setup:", error);
    
    if (error.error === 'NOT_AUTHORIZED') {
      console.log("\nüîë Problema de autoriza√ß√£o. Verifique:");
      console.log("1. Se a API key est√° correta");
      console.log("2. Se a base ID est√° correta");
      console.log("3. Se o token tem permiss√µes de read/write");
      console.log("4. Se as tabelas 'Properties' e 'Testimonials' existem");
    }
    
    if (error.error === 'TABLE_NOT_FOUND') {
      console.log("\nüìã Tabelas n√£o encontradas. Voc√™ precisa criar:");
      console.log("- Tabela 'Properties'");
      console.log("- Tabela 'Testimonials'");
      console.log("- Tabela 'Contacts' (opcional)");
      console.log("- Tabela 'Users' (opcional)");
    }
  }
}

setupAirtable();